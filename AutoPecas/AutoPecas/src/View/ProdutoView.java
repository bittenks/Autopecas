/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;
import DAO.CategoriaDAO;
import DAO.ClienteDAO;
import DAO.MarcaDAO;
import DAO.ProdutoDAO;
import Model.Categoria;
import Model.Cliente;
import Model.Marca;
import Model.Produto;
import com.lowagie.text.Document;
import com.lowagie.text.DocumentException;
import com.lowagie.text.Element;
import com.lowagie.text.Font;
import com.lowagie.text.PageSize;
import com.lowagie.text.Paragraph;
import com.lowagie.text.pdf.PdfPCell;
import com.lowagie.text.pdf.PdfPTable;
import com.lowagie.text.pdf.PdfWriter;
import java.awt.Desktop;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author bittenks_win
 */
public class ProdutoView extends javax.swing.JInternalFrame {

        Produto produto;
        ProdutoDAO produtoDAO;
        List<Produto> listaProdutos;
        CategoriaDAO categoriaDAO;
        List<Categoria> listaCategoria;
        MarcaDAO marcaDAO;
        List<Marca> listaMarca;
        Document doc;

    /**
     * Creates new form ProdutoView
     */
    public ProdutoView() {
        produtoDAO = new ProdutoDAO();
        listaProdutos = new ArrayList<>();
        categoriaDAO = new CategoriaDAO();
        listaCategoria = new ArrayList<>();
        marcaDAO = new MarcaDAO();
        listaMarca = new ArrayList<>();
        initComponents();
        this.setVisible(true);
        atualizarTabelaProduto();
        preencherComboCategoria();
        preencherComboMarca();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnExcluirProduto = new javax.swing.JButton();
        btnNovoProduto = new javax.swing.JButton();
        txtdescricaoProduto = new javax.swing.JTextField();
        txtIdProduto = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        btnSalvarProduto = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtvalorProduto = new javax.swing.JTextField();
        txtquantidadeProduto = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtNomeProduto = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        btnAlterarProduto1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProduto = new javax.swing.JTable();
        btnCancelar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        cbxCategoria = new javax.swing.JComboBox();
        cbxMarca = new javax.swing.JComboBox();
        btnRelatorioProd = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();

        setClosable(true);
        setMaximumSize(new java.awt.Dimension(1360, 940));
        setMinimumSize(new java.awt.Dimension(1360, 940));
        setPreferredSize(new java.awt.Dimension(1360, 940));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setText("Código");

        btnExcluirProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/excluir.png"))); // NOI18N
        btnExcluirProduto.setEnabled(false);
        btnExcluirProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirProdutoActionPerformed(evt);
            }
        });

        btnNovoProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/novo.png"))); // NOI18N
        btnNovoProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoProdutoActionPerformed(evt);
            }
        });

        txtdescricaoProduto.setEnabled(false);

        txtIdProduto.setEnabled(false);

        jLabel12.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel12.setText("Produtos");

        btnSalvarProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/salvar.png"))); // NOI18N
        btnSalvarProduto.setEnabled(false);
        btnSalvarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarProdutoActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setText("Descrição");

        jLabel13.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel13.setText("Valor");

        jLabel9.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel9.setText("Quantidade");

        txtvalorProduto.setEnabled(false);

        txtquantidadeProduto.setEnabled(false);

        jLabel10.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel10.setText("Categoria");

        txtNomeProduto.setEnabled(false);

        jLabel11.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel11.setText("Marca");

        btnAlterarProduto1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/alterar.png"))); // NOI18N
        btnAlterarProduto1.setEnabled(false);
        btnAlterarProduto1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarProduto1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setText("Nome");

        tblProduto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblProduto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProdutoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblProduto);

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/cancelar.png"))); // NOI18N
        btnCancelar.setEnabled(false);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel4.setText("Novo Produto");

        jLabel5.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel5.setText("Salvar");

        jLabel6.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel6.setText("Cancelar");

        jLabel7.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel7.setText("Alterar");

        jLabel8.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel8.setText("Excluir");

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/produtos.png"))); // NOI18N

        cbxCategoria.setToolTipText("");
        cbxCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxCategoriaActionPerformed(evt);
            }
        });

        cbxMarca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxMarcaActionPerformed(evt);
            }
        });

        btnRelatorioProd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/relatorio.png"))); // NOI18N
        btnRelatorioProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRelatorioProdActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel15.setText("Relatório");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/sair.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel16.setText("Sair");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(0, 463, Short.MAX_VALUE))
                            .addComponent(txtdescricaoProduto, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 533, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbxCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(18, 18, 18)
                                                    .addComponent(btnAlterarProduto1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(18, 18, 18))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jLabel16)
                                                    .addGap(91, 91, 91)
                                                    .addComponent(jLabel7)
                                                    .addGap(48, 48, 48)))
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(btnExcluirProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                    .addComponent(jLabel8)
                                                    .addGap(29, 29, 29))))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel13)
                                            .addComponent(txtvalorProduto, javax.swing.GroupLayout.DEFAULT_SIZE, 771, Short.MAX_VALUE)
                                            .addComponent(txtquantidadeProduto)
                                            .addComponent(jLabel10)
                                            .addComponent(jLabel11)
                                            .addComponent(cbxMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(txtIdProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel12)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel14)
                        .addGap(277, 277, 277))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addGap(20, 20, 20))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNomeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 1314, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnNovoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnSalvarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(jLabel4)
                                        .addGap(59, 59, 59)
                                        .addComponent(jLabel5)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(41, 41, 41)
                                        .addComponent(jLabel6)
                                        .addGap(71, 71, 71)
                                        .addComponent(jLabel15))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnRelatorioProd, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap(20, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtIdProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel12)))
                        .addGap(30, 30, 30)
                        .addComponent(jLabel2))
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNomeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtdescricaoProduto))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtquantidadeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtvalorProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10)
                        .addGap(8, 8, 8)
                        .addComponent(cbxCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbxMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnSalvarProduto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnNovoProduto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnCancelar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnRelatorioProd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel6)
                                .addComponent(jLabel15))
                            .addComponent(jLabel4)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btnAlterarProduto1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel16))
                                .addComponent(jLabel8)))
                        .addComponent(btnExcluirProduto)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 441, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnExcluirProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirProdutoActionPerformed
        if (txtIdProduto.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Selecione o produto");
        }else{
            produto = new Produto();
            produto.setIdProduto(Integer.parseInt(txtIdProduto.getText()));
            int confirma = JOptionPane.showConfirmDialog(null, "Deseja excluir: " + txtNomeProduto.getText());
            if (confirma == 0){
                try {
                    produtoDAO.excluir(produto);
                } catch (SQLException ex) {
                    Logger.getLogger(ProdutoView.class.getName()).log(Level.SEVERE, null, ex);
                }
                JOptionPane.showMessageDialog(null, "Produto Excluido com Sucesso!!!");
                    limpaCamposProduto();
                    atualizarTabelaProduto();
                    preparaExcluir();
            }
        }
    }//GEN-LAST:event_btnExcluirProdutoActionPerformed

    private void btnNovoProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoProdutoActionPerformed
        ativaCampos();
        preparaNovo();
        limpaCamposProduto();
    }//GEN-LAST:event_btnNovoProdutoActionPerformed

    private void btnSalvarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarProdutoActionPerformed
        if (txtNomeProduto.getText().isEmpty() || txtdescricaoProduto.getText().isEmpty()
            || txtquantidadeProduto.getText().isEmpty() ){
            JOptionPane.showMessageDialog(null, "Preencha todos os campos!!!");
            txtNomeProduto.requestFocusInWindow();
        } else{
            produto = new Produto();
            produto.setNomeProduto(txtNomeProduto.getText());
            produto.setDescricaoProduto(txtdescricaoProduto.getText());
            produto.setQuantidadeProduto(Integer.parseInt(txtquantidadeProduto.getText()));
            produto.setValorProduto(Float.valueOf(txtvalorProduto.getText()));;
            produto.setCategoriaProduto(listaCategoria.get(cbxCategoria.getSelectedIndex()));
            produto.setMarcaProduto(listaMarca.get(cbxMarca.getSelectedIndex()));
            

            try {
                produtoDAO.salvar(produto);
            } catch (SQLException ex) {
                Logger.getLogger(ProdutoView.class.getName()).log(Level.SEVERE, null, ex);
            }
            JOptionPane.showMessageDialog(null, "Produto Salvo com Sucesso!!!");
                    atualizarTabelaProduto();
                    preparaSalvareCancelar();
                    desativaCampos();
                    limpaCamposProduto();
        
        }
    }//GEN-LAST:event_btnSalvarProdutoActionPerformed

    private void btnAlterarProduto1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarProduto1ActionPerformed
    preparaAlterar();
        ativaCampos();
        if (txtIdProduto.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Selecione o produto");
        }else{
            produto = new Produto();
            produto.setIdProduto(Integer.parseInt(txtIdProduto.getText()));
            produto.setNomeProduto(txtNomeProduto.getText());
            produto.setDescricaoProduto(txtdescricaoProduto.getText());
            produto.setQuantidadeProduto(Integer.parseInt(txtIdProduto.getText()));
            produto.setCategoriaProduto(listaCategoria.get(cbxCategoria.getSelectedIndex()));
            produto.setMarcaProduto(listaMarca.get(cbxMarca.getSelectedIndex()));
            produto.setValorProduto(Integer.parseInt(txtIdProduto.getText()));;

            try {
                produtoDAO.alterar(produto);
            } catch (SQLException ex) {
                Logger.getLogger(ProdutoView.class.getName()).log(Level.SEVERE, null, ex);
            }
            JOptionPane.showMessageDialog(null, "Produto Alterado com Sucesso!!!");
                    limpaCamposProduto();
                    atualizarTabelaProduto();
                    preparaSalvareCancelar();
                    desativaCampos();
        }
    }//GEN-LAST:event_btnAlterarProduto1ActionPerformed

    private void tblProdutoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProdutoMouseClicked
        produto = new Produto();


            txtIdProduto.setText(tblProduto.getValueAt(tblProduto.getSelectedRow(), 0).toString());
            txtNomeProduto.setText(tblProduto.getValueAt(tblProduto.getSelectedRow(), 1).toString());
            txtdescricaoProduto.setText(tblProduto.getValueAt(tblProduto.getSelectedRow(), 2).toString());
            txtquantidadeProduto.setText(tblProduto.getValueAt(tblProduto.getSelectedRow(), 3).toString());
            txtvalorProduto.setText(tblProduto.getValueAt(tblProduto.getSelectedRow(), 4).toString());
        try {
                produto = produtoDAO.buscaProdutoCodigo(txtIdProduto.getText());
        } catch (SQLException ex) {
                Logger.getLogger(ProdutoView.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (Categoria categoria : listaCategoria){
        if (categoria.getIdCategoriaProd()==produto.getCategoriaProduto().getIdCategoriaProd()){
                cbxCategoria.setSelectedItem(categoria.getDescricaoCatProd());
        break;
        }
    }
        for (Marca marca : listaMarca){
        if (marca.getIdmarcaProd()==produto.getMarcaProduto().getIdmarcaProd()){
                cbxMarca.setSelectedItem(marca.getDescricao());
        break;
        }
    }

        preparaSelecaoTabela();
    }//GEN-LAST:event_tblProdutoMouseClicked

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        limpaCamposProduto();
        preparaSalvareCancelar();
        desativaCampos();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void cbxCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxCategoriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxCategoriaActionPerformed

    private void cbxMarcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxMarcaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxMarcaActionPerformed

    private void btnRelatorioProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRelatorioProdActionPerformed
        String nomediretorio = null;
        String nomepasta = "Relatorio_Produtos";
        String separador = java.io.File.separator;
        try {
            nomediretorio = "C:" + separador + nomepasta;
            if (!new File(nomediretorio).exists()) {
                (new File(nomediretorio)).mkdir();
            }
            gerarDocumento();
            } catch (Exception e) {
                e.printStackTrace();
            }
    }
        public void gerarDocumento() {
        try {
            List<Produto> lista = new ArrayList<>();
            lista = produtoDAO.ListaProduto();
            doc = new Document(PageSize.A4, 41.5f, 41.5f, 55.2f, 55.2f);
            PdfWriter.getInstance(doc, new FileOutputStream("C:/Relatorio_Produtos/RelatorioProdutos" + ".pdf"));
            doc.open();
            
            Font f1 = new Font(Font.HELVETICA, 14, Font.BOLD);
            Font f2 = new Font(Font.HELVETICA, 12, Font.BOLD);
            Font f3 = new Font(Font.HELVETICA, 12, Font.NORMAL);
            Font f4 = new Font(Font.HELVETICA, 10, Font.BOLD);
            Font f5 = new Font(Font.HELVETICA, 10, Font.NORMAL);
            
            Paragraph titulo1 = new Paragraph("Sistemas de Gestão - Auto Peças", f2);
            titulo1.setAlignment(Element.ALIGN_CENTER);
            titulo1.setSpacingAfter(10);
            
            Paragraph titulo2 = new Paragraph("Relatório de Produtos", f1);
            titulo2.setAlignment(Element.ALIGN_CENTER);
            titulo2.setSpacingAfter(0);
            
            PdfPTable tabela = new PdfPTable(new float[]{0.25f, 0.25f, 0.25f, 0.25f, 0.25f});
            tabela.setHorizontalAlignment(Element.ALIGN_CENTER);
            tabela.setWidthPercentage(100f);
            
            PdfPCell cabecalho1 = new PdfPCell(new Paragraph("Nome", f3));
            //cabecalho1.setBackgroundColor(new Color(0xc0, 0xc0, 0xc0));
            cabecalho1.setHorizontalAlignment(Element.ALIGN_JUSTIFIED);
            cabecalho1.setBorder(0);
            
            PdfPCell cabecalho2 = new PdfPCell(new Paragraph("Quantidade", f3));
            //cabecalho2.setBackgroundColor(new Color(0xc0, 0xc0, 0xc0));
            cabecalho2.setHorizontalAlignment(Element.ALIGN_JUSTIFIED);
            cabecalho2.setBorder(0);
            
            PdfPCell cabecalho3 = new PdfPCell(new Paragraph("Valor", f3));
            //cabecalho2.setBackgroundColor(new Color(0xc0, 0xc0, 0xc0));
            cabecalho3.setHorizontalAlignment(Element.ALIGN_JUSTIFIED);
            cabecalho3.setBorder(0);
            
            PdfPCell cabecalho4 = new PdfPCell(new Paragraph("Categoria", f3));
            //cabecalho2.setBackgroundColor(new Color(0xc0, 0xc0, 0xc0));
            cabecalho4.setHorizontalAlignment(Element.ALIGN_JUSTIFIED);
            cabecalho4.setBorder(0);
            
            PdfPCell cabecalho5 = new PdfPCell(new Paragraph("Marca", f3));
            //cabecalho2.setBackgroundColor(new Color(0xc0, 0xc0, 0xc0));
            cabecalho5.setHorizontalAlignment(Element.ALIGN_JUSTIFIED);
            cabecalho5.setBorder(0);
            
            
            tabela.addCell(cabecalho1);
            tabela.addCell(cabecalho2);
            tabela.addCell(cabecalho3);
            tabela.addCell(cabecalho4);
            tabela.addCell(cabecalho5);
            
            for (Produto produto : lista) {
                Paragraph p1 = new Paragraph(produto.getNomeProduto(), f5);
                p1.setAlignment(Element.ALIGN_JUSTIFIED);
                PdfPCell col1 = new PdfPCell(p1);
                col1.setBorder(0);
                
                Paragraph p2 = new Paragraph(String.valueOf(produto.getQuantidadeProduto()), f5);
                p2.setAlignment(Element.ALIGN_JUSTIFIED);
                PdfPCell col2 = new PdfPCell(p2);
                col2.setBorder(0);
                
                Paragraph p3 = new Paragraph(String.valueOf(produto.getValorProduto()), f5);
                p3.setAlignment(Element.ALIGN_JUSTIFIED);
                PdfPCell col3 = new PdfPCell(p3);
                col3.setBorder(0);
                
                Paragraph p4 = new Paragraph(String.valueOf(produto.getCategoriaProduto()), f5);
                p4.setAlignment(Element.ALIGN_JUSTIFIED);
                PdfPCell col4 = new PdfPCell(p4);
                col4.setBorder(0);
                
                Paragraph p5 = new Paragraph(String.valueOf(produto.getMarcaProduto()), f5);
                p5.setAlignment(Element.ALIGN_JUSTIFIED);
                PdfPCell col5 = new PdfPCell(p5);
                col5.setBorder(0);
                
                tabela.addCell(col1);
                tabela.addCell(col2);
                tabela.addCell(col3);
                tabela.addCell(col4);
                tabela.addCell(col5);

            }
            doc.add(titulo2);
            doc.add(titulo1);
            doc.add(tabela);
            doc.close();
            
            JOptionPane.showMessageDialog(null, "Relatório Salvo com Sucesso!!!");
            String caminho = "C:/Relatorio_Produtos/RelatorioProdutos.pdf";
            Desktop.getDesktop().open(new File(caminho));
            
        }catch (DocumentException e) {
            e.printStackTrace();
        }catch (SQLException ex) {
            ex.printStackTrace();
        }catch (IOException exx) {
            exx.printStackTrace();
            JOptionPane.showMessageDialog(null, "Relatório de Produtos Aberto!!! Feche Para Gerar um Novo!!!");
        }
    }//GEN-LAST:event_btnRelatorioProdActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    public void atualizarTabelaProduto(){
        produto = new Produto();
            try {
                listaProdutos = produtoDAO.ListaProduto();
            } catch (SQLException ex) {
                Logger.getLogger(ClienteView.class.getName()).log(Level.SEVERE, null, ex);
            }
                String dados [][] = new String[listaProdutos.size()][7];
                int i = 0;
               for (Produto produto : listaProdutos){
                    dados[i][0] = String.valueOf(produto.getIdProduto());
                    dados[i][1] = produto.getNomeProduto();
                    dados[i][2] = produto.getDescricaoProduto();
                    dados[i][3] = String.valueOf(produto.getQuantidadeProduto());
                    dados[i][4] = String.valueOf(produto.getValorProduto());
                    dados[i][5] = produto.getCategoriaProduto().getDescricaoCatProd();
                    dados[i][6] = produto.getMarcaProduto().getDescricao();
                    i++;
                }
                String tituloColuna[] = {"IdProduto", "Nome", "Descrição", "Quantidade", "Valor", "categoria", "Marca"};
                DefaultTableModel tabelaProduto = new DefaultTableModel();
                tabelaProduto.setDataVector(dados, tituloColuna);
                tblProduto.setModel(new DefaultTableModel(dados, tituloColuna){
                    boolean[] canEdit = new boolean[]{
                        false, false, false, false, false, false, false
                    };
                   
                        public boolean isCellEdiTable(int rowIndex, int columnIndex){
                            return canEdit[columnIndex];
                        }
                });
                tblProduto.getColumnModel().getColumn(0).setPreferredWidth(100);
                tblProduto.getColumnModel().getColumn(1).setPreferredWidth(100);
                tblProduto.getColumnModel().getColumn(2).setPreferredWidth(100);
                tblProduto.getColumnModel().getColumn(3).setPreferredWidth(100);
                tblProduto.getColumnModel().getColumn(4).setPreferredWidth(100);
                tblProduto.getColumnModel().getColumn(5).setPreferredWidth(100);
                tblProduto.getColumnModel().getColumn(6).setPreferredWidth(100);

                
                
                DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
                centralizado.setHorizontalAlignment(SwingConstants.CENTER);
                tblProduto.getColumnModel().getColumn(0).setCellRenderer(centralizado);
                tblProduto.setRowHeight(25);
                tblProduto.updateUI();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterarProduto1;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnExcluirProduto;
    private javax.swing.JButton btnNovoProduto;
    private javax.swing.JButton btnRelatorioProd;
    private javax.swing.JButton btnSalvarProduto;
    private javax.swing.JComboBox cbxCategoria;
    private javax.swing.JComboBox cbxMarca;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblProduto;
    private javax.swing.JTextField txtIdProduto;
    private javax.swing.JTextField txtNomeProduto;
    private javax.swing.JTextField txtdescricaoProduto;
    private javax.swing.JTextField txtquantidadeProduto;
    private javax.swing.JTextField txtvalorProduto;
    // End of variables declaration//GEN-END:variables

    private void limpaCamposProduto() {
        txtIdProduto.setText("");
        txtNomeProduto.setText("");
        txtquantidadeProduto.setText("");
        txtdescricaoProduto.setText("");
        cbxMarca.setSelectedItem("");
        cbxCategoria.setSelectedItem("");
        txtvalorProduto.setText("");
    }
    
    public void ativaCampos(){
	txtNomeProduto.setEnabled(true);
	txtquantidadeProduto.setEnabled(true);
	txtdescricaoProduto.setEnabled(true);
        txtvalorProduto.setEnabled(true);
	cbxMarca.setEnabled(true);
	cbxCategoria.setEnabled(true);
}
    
    public void desativaCampos(){
	txtNomeProduto.setEnabled(false);
	txtquantidadeProduto.setEnabled(false);
	txtdescricaoProduto.setEnabled(false);
	cbxMarca.setEnabled(false);
	cbxCategoria.setEnabled(false);
	txtvalorProduto.setEnabled(false);
}
     
    public void preparaNovo(){
    btnNovoProduto.setEnabled(false);
    btnSalvarProduto.setEnabled(true);
    btnCancelar.setEnabled(true);
    btnAlterarProduto1.setEnabled(false);
    btnExcluirProduto.setEnabled(false);
    tblProduto.setEnabled(false);
    tblProduto.clearSelection();
}
    
    public void preparaSalvareCancelar(){
    btnNovoProduto.setEnabled(true);
    btnSalvarProduto.setEnabled(false);
    btnCancelar.setEnabled(false);
    btnAlterarProduto1.setEnabled(false);
    btnExcluirProduto.setEnabled(false);
    tblProduto.setEnabled(true);
    tblProduto.clearSelection();
}
    
    public void preparaSelecaoTabela(){
    btnNovoProduto.setEnabled(true);
    btnCancelar.setEnabled(true);
    btnAlterarProduto1.setEnabled(true);
    btnExcluirProduto.setEnabled(true); 
    ativaCampos();
}
    
    public void preparaAlterar(){
    btnNovoProduto.setEnabled(false);
    btnSalvarProduto.setEnabled(true);
    btnCancelar.setEnabled(true);
    btnAlterarProduto1.setEnabled(false);
    btnExcluirProduto.setEnabled(false);   
    tblProduto.setEnabled(false);
    tblProduto.clearSelection();
}
    
    public void preparaExcluir(){
    btnExcluirProduto.setEnabled(false);
    btnAlterarProduto1.setEnabled(false);
}
    public void preencherComboCategoria(){
        try {
            listaCategoria = categoriaDAO.ListaCategoria();
        } catch (SQLException ex) {
            Logger.getLogger(ProdutoView.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (Categoria categoria: listaCategoria){
            cbxCategoria.addItem(categoria.getDescricaoCatProd());
        }
    }
    public void preencherComboMarca(){
        try {
            listaMarca = marcaDAO.ListaMarca();
        } catch (SQLException ex) {
            Logger.getLogger(ProdutoView.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (Marca marca: listaMarca){
            cbxMarca.addItem(marca.getDescricao());
        }
    }
}
